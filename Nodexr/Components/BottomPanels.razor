
@inject  RegexReplaceHandler RegexReplaceHandler
@inject  INodeHandler NodeHandler

<div class="bottom-panels" id="bottompanels">
    <div class="viewport search-text panel" id="viewport-searchtext">
        <h5>Search Text</h5>
        <div class="search-text-container textbox">
            <SearchTextHighlight Text="@RegexReplaceHandler.SearchText" Matches="@RegexReplaceHandler.GetAllMatches()"/>
            <textarea @bind-value="@RegexReplaceHandler.SearchText" @bind-value:event="oninput" class="search-textarea" />
        </div>
    </div>
    <div class="viewport panel" id="viewport-replacetext" style="overflow-y: auto;">
		<div style="display:flex; flex-direction:row; gap:10px; align-items: baseline;">
			<h5 style="margin-bottom:0">Replace with:</h5>
			<input
				type="text"
				@bind-value="@RegexReplaceHandler.ReplacementRegex"
				@bind-value:event="oninput"
				style="flex:1"
				class="textbox"/>
		</div>
		<p style="font-size:1.1rem; margin:0;">@RegexReplaceHandler.GetReplaceResult()</p>
    </div>
</div>

@code {
    protected override void OnInitialized()
    {
        NodeHandler.OutputChanged += (sender, e) => StateHasChanged();
        RegexReplaceHandler.RegexOptionsChanged += (sender, e) => StateHasChanged();
    }
}
