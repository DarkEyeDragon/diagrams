@inject INodeHandler NodeHandler

<button class="add-button" @onclick="@AddItem">Add Item</button>
@foreach (var input in Input.Inputs)
{
    <div style="display:flex;">
        <InputProceduralView Input="@input"/>
        <button title="Move up" @onclick="@(() => MoveUp(input))" class="item-button"><i class="fas fa-chevron-up"></i></button>
        <button title="Move down" @onclick="@(() => MoveDown(input))" class="item-button"><i class="fas fa-chevron-down"></i></button>
        <button title="Delete input" @onclick="@(() => RemoveItem(input))" class="item-button"><i class="fas fa-times"></i></button>
    </div>
}

@functions{
    [Parameter] public InputCollection Input { get; set; }

    void AddItem()
    {
        Input.AddItem();
    }

    void MoveUp(InputProcedural input)
    {
        Input.MoveUp(input);
    }

    void MoveDown(InputProcedural input)
    {
        Input.MoveDown(input);
    }

    void RemoveItem(InputProcedural input)
    {
        Input.RemoveItem(input);
        NodeHandler.ForceRefreshNoodles();
    }
}
